openapi: 3.0.1
info:
  title: Weather Service
  description: "**This service uses the Open Weather API that exposes an endpoint that takes in lat/long coordinates and return what the weather condition is outside in that area (snow, rain, etc), whether itâ€™s hot, cold, or moderate outside."
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /health:
    get:
      summary: Health check
      description: Check if the service is up and running
      responses:
        '200':
          description: Service is up and running
        '500':
          description: Service is down
  /weather:
    get:
      summary: Get weather
      description: Get the weather condition outside in a specific area
      parameters:
        - name: lat
          in: query
          description: Latitude
          required: true
          schema:
            type: number
        - name: lon
          in: query
          description: Longitude
          required: true
          schema:
            type: number
        - name: unit
          in: query
          description: Temperature unit
          required: false
          schema:
            type: string
            enum:
              - metric
              - imperial              
      responses:
        '200':
          description: Weather information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        
components:
  schemas:    
    WeatherResponse:
      type: object
      properties:
        temperatureCondition:
          type: string
          description: "Hot, cold, or moderate"
        weatherCondition:
          type: string
          description: "Rain, snow, etc"
        temperature:
          type: number
          description: "Temperature in the area"
        unit:
          type: string
          description: "Temperature unit"          
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: "Error code"
        message:
          type: string
          description: "Error message"
    